% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ml_learning.R
\name{ml_learning}
\alias{ml_learning}
\title{Generalized ML Learning}
\usage{
ml_learning(
  data,
  formula = NULL,
  batch,
  parallelize_batch = FALSE,
  loss_name = "mse",
  caret_params = NULL,
  custom_fit = NULL,
  custom_predict = NULL,
  custom_loss = NULL,
  n_cores = detectCores() - 1
)
}
\arguments{
\item{data}{A matrix or data frame of data, including or not a target variable (handles both supervised and unsupervised ML models).}

\item{formula}{Optional formula relating the target to the predictors for supervised learning (NULL for unsupervised)}

\item{batch}{Either an integer specifying the number of batches (which will be created by random sampling) or a vector of length equal to the sample size providing the batch assignment (index) for each individual in the sample.}

\item{parallelize_batch}{Logical. Whether to parallelize batch processing (i.e. the cram method learns T policies, with T the number of batches. They are learned in parallel when parallelize_batch is TRUE vs. learned sequentially using the efficient data.table structure when parallelize_batch is FALSE, recommended for light weight training). Defaults to \code{FALSE}.}

\item{loss_name}{The name of the loss the user wants to use.}

\item{caret_params}{A list of additional parameters to pass to the model, which can be any parameter defined in the model reference package. Defaults to \code{NULL}.}

\item{custom_fit}{A custom, user-defined, function that outputs a fitted model given training data (allows flexibility). Defaults to \code{NULL}.}

\item{custom_predict}{A custom, user-defined, function for making predictions given a fitted model and test data (allow flexibility). Defaults to \code{NULL}.}

\item{custom_loss}{Optional a custom, user-defined, function for calculating the loss of a fitted ML model on some data; data should be a matrix or data frame and the function should return a vector containing the loss for each individual.}

\item{n_cores}{Number of cores to use for parallelization when parallelize_batch is set to TRUE. Defaults to detectCores() - 1.}
}
\value{
A list containing:
  \item{final_ml_model}{The final fitted ML model, depending on \code{model_type} and \code{model_params}.}
  \item{losses}{A matrix of losses, where each column represents a batch's learned ML model and the first column is all zeroes (baseline ML model)}
  \item{batch_indices}{The indices for each batch, either as generated (if \code{batch} is an integer) or as provided by the user.}
}
\description{
This function performs batch-wise learning for any ML model.
}
\examples{
# Example usage
X_data <- matrix(rnorm(100 * 5), nrow = 100, ncol = 5)
D_data <- sample(c(0, 1), 100, replace = TRUE)
Y_data <- rnorm(100)
nb_batch <- 5

# Perform CRAM learning
result <- cram_learning(X = X_data, D = D_data, Y = Y_data, batch = nb_batch)

# Access the learned policies and final model
policies_matrix <- result$policies
final_model <- result$final_policy_model
batch_indices <- result$batch_indices
}
\seealso{
\code{\link[grf]{causal_forest}}, \code{\link[glmnet]{cv.glmnet}}, \code{\link[keras]{keras_model_sequential}}
}
