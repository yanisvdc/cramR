% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_model.R
\name{fit_model}
\alias{fit_model}
\title{Fit Model}
\usage{
fit_model(model, X, Y, D, model_type, learner_type, model_params)
}
\arguments{
\item{model}{An unfitted model object, as returned by `set_model`.}

\item{X}{A matrix or data frame of covariates for the samples.}

\item{Y}{A vector of outcome values.}

\item{D}{A vector of binary treatment indicators (1 for treated, 0 for untreated).}

\item{model_type}{The model type for policy learning. Options include \code{"causal_forest"}, \code{"s_learner"}, and \code{"m_learner"}. Default is \code{"causal_forest"}.}

\item{learner_type}{The learner type for the chosen model. Options include \code{"ridge"} for Ridge Regression and \code{"fnn"} for Feedforward Neural Network. Default is \code{"ridge"}.}

\item{model_params}{A list of additional parameters to pass to the model, which can be any parameter defined in the model reference package. Defaults to \code{NULL}.}
}
\value{
The fitted model object.
}
\description{
This function trains a given unfitted model with the provided data and parameters,
according to model type and learner type.
}
\examples{
# Example usage for Ridge Regression S-learner
set.seed(123)
X <- matrix(rnorm(1000), nrow = 100, ncol = 10)
D <- sample(0:1, 100, replace = TRUE)
Y <- rnorm(100)
# Set up the model
model <- set_model("s_learner", "ridge")
# Define model parameters
model_params <- list(alpha = 0)
# Fit the model
fitted_model <- fit_model(
                        model, X, Y, D = D,
                        model_type = "s_learner",
                        learner_type = "ridge",
                        model_params = model_params)
}
