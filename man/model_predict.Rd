% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_predict.R
\name{model_predict}
\alias{model_predict}
\title{Predict with the Specified Model}
\usage{
model_predict(model, X, D, model_type, learner_type, model_params)
}
\arguments{
\item{model}{A trained model object returned by the `fit_model` function.}

\item{X}{A matrix or data frame of covariates for which predictions are required.}

\item{D}{A vector of binary treatment indicators (1 for treated, 0 for untreated). Optional, depending on the model type.}

\item{model_type}{The model type for policy learning. Options include \code{"causal_forest"}, \code{"s_learner"}, and \code{"m_learner"}. Default is \code{"causal_forest"}.}

\item{learner_type}{The learner type for the chosen model. Options include \code{"ridge"} for Ridge Regression and \code{"fnn"} for Feedforward Neural Network. Default is \code{"ridge"}.}

\item{model_params}{A list of additional parameters to pass to the model, which can be any parameter defined in the model reference package. Defaults to \code{NULL}.}
}
\value{
A vector of predictions or CATE estimates, depending on the \code{model_type} and \code{learner_type}.
}
\description{
This function performs inference using a trained model, providing flexibility for different types of models
such as Causal Forest, Ridge Regression, and Feedforward Neural Networks (FNNs).
}
\examples{
# Load required library
library(grf)

# Example: Predicting with a Causal Forest model
set.seed(123)
X <- matrix(rnorm(1000), nrow = 100, ncol = 10)  # Covariates
Y <- rnorm(100)                                 # Outcomes
D <- sample(0:1, 100, replace = TRUE)           # Treatment indicators
cf_model <- causal_forest(X, Y, D)             # Train Causal Forest
new_X <- matrix(rnorm(100), nrow = 10, ncol = 10) # New data for predictions
predictions <- model_predict(model = cf_model, X = new_X, model_type = "causal_forest")
}
\seealso{
\code{\link[grf]{causal_forest}}, \code{\link[glmnet]{cv.glmnet}}
}
